#!/not/executable
#
# Copyright (c) 2012-2021 Matthew Pearson <matthewpearson@gmail.com>.
#
# These scripts are free. There is no warranty; your mileage may vary.
# Visit http://creativecommons.org/licenses/by-nc-sa/4.0/ for more details.
#
# configuration setup for git
#

[alias]
	ack = "!f() { \
		git grep -E -I --break --heading --show-function \"$*\" -- ':(exclude)*.css.map' ':(exclude)*.min.*' ; \
	}; f"
	bbdiff = difftool -y -t bbdiff
	cancel = reset --soft HEAD^
	diffstat = diff -r --no-merges --stat
	ksdiff = difftool -y -t ksdiff
	last = log -1 -p HEAD
	longline = log --abbrev-commit --graph --topo-order --pretty=tformat:'%C(auto)%h %C(dim)%ad%C(reset) %s %C(dim)(%an)%C(reset)'
	oneline = log --abbrev-commit --date=short --graph --pretty=oneline
	pdiff = whatchanged -n 1 -p
	twdiff = difftool -y -t twdiff
	unstage = reset HEAD
	wdiff = diff --minimal --word-diff=color
	whatline = whatchanged --abbrev-commit --date=short --graph --pretty=oneline
[blame]
	date = short
[branch]
	autosetuprebase = always
[color]
	ui = auto
[core]
	autocrlf = false
	editor = emacs
	pager = cat
	safecrlf = true
[diff]
	mnemonicprefix = true
	tool = "ksdiff"
[difftool]
	prompt = false
[difftool "bbdiff"]
	cmd = bbdiff --wait --resume "$REMOTE" "$LOCAL"
[difftool "ksdiff"]
	cmd = ksdiff --partial-changeset --relative-path \"$MERGED\" -- \"$LOCAL\" \"$REMOTE\"
[difftool "twdiff"]
	cmd = twdiff --wait --resume "$REMOTE" "$LOCAL"
[grep]
	lineNumber = true
[log]
	abbrev-commit = true
	date = short
	decorate = short
[merge]
	tool = "ksdiff"
[mergetool]
	prompt = false
[mergetool "ksdiff"]
	cmd = ksdiff --merge --output \"$MERGED\" --base \"$BASE\" -- \"$LOCAL\" --snapshot \"$REMOTE\" --snapshot
[push]
	default = simple
[rebase]
	whitespace = fix
[remote]
	verbose = true
[user]
	email = __G_USER_EMAIL__
	name = __G_USER_TRUENAME__


#
# Yellow means local
#

# currently-selected branch
[color "branch"]
	current = yellow reverse bold
[color "decorate"]
	HEAD = yellow reverse bold
[color "status"]
	branch = yellow reverse bold
# non-selected local branches
[color "branch"]
	local = yellow
[color "decorate"]
	branch = yellow
# local, uncommitted edits
[color "status"]
	changed = yellow

#
# Blue means remote
#

# upstream branches
[color "branch"]
	upstream = blue bold
# remote branches
[color "branch"]
	remote = blue
[color "decorate"]
	remoteBranch = blue
# local, staged editss
[color "status"]
	added = blue		# synonymous with 'updated'

#
# Cyan means metadata
#

[color "diff"]
	commit = cyan		# this is also styles sha's in `git log`
	frag = cyan
	func = cyan bold
	meta = cyan dim
[color "grep"]
	filename = cyan
	function = cyan bold
	linenumber = cyan dim
	separator = cyan dim
[color "interactive"]
	header = cyan

#
# Green means newly-added or found
#
[color "diff"]
	new = green
[color "grep"]
	match = green bold

#
# Red means removed
#
[color "diff"]
	old = red

#
# Red reverse means error
#
[color "diff"]
	whitespace = red reverse
[color "interactive"]
	error = red reverse bold
[color "status"]
	nobranch = red reverse bold

#
# Magenta means git
#
[color "branch"]
	plain = magenta
[color "decorate"]
	stash = magenta
	tag = magenta
[color "interactive"]
	prompt = magenta bold

#
# Unassigned values inherit from the shell and are here for reference
#
[color "diff"]
	plain =
[color "grep"]
	context = dim
	selected =
[color "interactive"]
	help = dim
[color "status"]
	header =
	untracked = dim

#EOF __TAGGED__
