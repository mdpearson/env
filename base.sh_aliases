#!/bin/sh
#
# Copyright (c) 2000-2025 Matthew Pearson <matthewpearson@gmail.com>.
#
# These scripts are free. There is no warranty; your mileage may vary.
# Visit http://creativecommons.org/licenses/by-nc-sa/4.0/ for more details.
#
# alias definitions and other sh cmds that must be run per tty
#

hash -r

. "$HOME/.isinstalled"

unalias cp 2>/dev/null
unalias ls 2>/dev/null
unalias rm 2>/dev/null

alias cp="cp -i"
alias cpf="cp -f"

alias emacs="emacs -nw"

checkls_error="`ls --color=auto -ah 2>&1 > /dev/null`"
if [ "$?" -ne 0 ] || [ "$checkls_error" ]
then
	alias ls='ls -Fb'
else
	alias ls='ls -Fbh --color=auto'
fi
unset checkls_error

if [ "`uname`" = Darwin ]
then
	long_lsflags="O"
	verylong_lsflags="Oe@"
fi

alias lsa="ls -A"
alias lsd="ls -d"
alias ll="ls -lh${long_lsflags}"
alias lla="ls -Alh${long_lsflags}"
alias lld="ls -Alhd${long_lsflags}"
alias lll="ls -Alh${verylong_lsflags}"
alias lt='ll -rt | tail'

unset long_lsflags
unset verylong_lsflags

alias rm="rm -i"
alias rmf="rm -f"
alias rmrf="rm -rf"

alias mv="mv -i"

alias rehash='hash -r'
alias hi="history"
alias u="uptime"
alias beep="printf '\007\007'"

alias grepn="grep -Hn"

alias nfilt="grep -v \
  '\(SCCS\|Bin\|depend\/\|deleted\|TAGS\|pkg\|\.svn\|RCS\|CVS\)'"

alias ipython='label "iPython" && ipython'

alias aws-mfa=". $HOME/bin/exec/aws_mfa.bash"

rgrep()
{
	grep -r "$*" ./* | nfilt
}

[ "`isinstalled cstyle`" ] && alias cstyle="cstyle -chpvP"
[ "`isinstalled dbx`" ] && alias rdbx="dbx -s $HOME/.dbxrc"
[ "`isinstalled node`" ] && alias clonejs="node ~/bin/clone.js"
[ "`isinstalled python`" ] && alias pysum="python -c 'import sys; print sum([int(i) for sublist in sys.stdin for i in sublist.split()])'"

[ "`isinstalled bsub`" ] && [ "`isinstalled bsub_wrapper`" ] && \
  alias bsub='bsub_wrapper'

if [ "`isinstalled a2ps`" ]
then
	alias c2ps="a2ps -=code"
	alias m2ps="a2ps -=man"
	alias s2ps="a2ps -=source"
	alias t2ps="a2ps -=text"
fi

if [ -x "$HOME/Sites/util/publish" ]
then
	alias publish="$HOME/Sites/util/publish $HOME/Sites"
fi

if [ "`uname -s`" = Darwin ]
then
	psargs='-axo user,pid,state,pri,%cpu,command'
else
	psargs='-eo user,pid,s,pri,pcpu,args'
fi
alias psa="ps $psargs"
alias psaw="ps -ww $psargs"
alias psam="psaw | grep __G_USER__"
alias findp="psam | grep -v grep | grep -i"
alias findpa="psaw | grep -v grep | grep -i"
unset psargs

unalias less 2>/dev/null
lessl="`(type less 2>/dev/null) | awk '{print $NF}'`"
if [ -x "$lessl" ]
then
	PAGER="$lessl"
	LESS='-XaeqP?f%f:stdin. ?m[%i of %m] .?lB%lB?L/%L. .?eEOF:?pB%pB\%..%t'
	export LESS PAGER
	alias more="less"
fi
unset lessl

if [ "$DISPLAY" ]
then
	alias x="xrdb -load \$XENVIRONMENT"
	alias tt="ttsession -p -c"
fi

unalias bbedit bbdiff bbfind 2>/dev/null
if [ "`isinstalled edit`" ]
then
	[ "`isinstalled bbedit`" ] || alias bbedit="edit"
fi
if [ "`isinstalled twdiff`" ]
then
	[ "`isinstalled bbdiff`" ] || alias bbdiff="twdiff"
fi
if [ "`isinstalled twfind`" ]
then
	[ "`isinstalled bbfind`" ] || alias bbfind="twfind"
fi

alias mods='svn status | grep "^[A|M]" | grep "\.\(py\|java\)$" | awk "{print \$(NF)}"'
if [ "`isinstalled bbedit`" ] || [ "`isinstalled edit`" ]
then
	openmods()
	{
		for f in `mods`
		do
			bbedit "$f"
		done
	}
fi

alias sane='tput rmacs'
alias bye='exit'

cerr()
{
	cd "$1" || return
	cat ./*.err
}

alias cvs='cvs -q'
alias cvsmods='cvs -q -n update 2>/dev/null | grep "^[AM]"'

set_colors()
{
	# BSD colors
	LSCOLORS="xxxxAxAxxxAxAxBxBxxdxx"
	CLICOLOR=1
	export LSCOLORS CLICOLOR

	# GNU colors
	unset LS_COLORS
	dirc="`(type dircolors 2>&1) | awk '{print $NF}'`"
	[ -x "$dirc" ] || dirc="`(type gdircolors 2>&1) | awk '{print $NF}'`"
	if [ -x "$dirc" ]
	then
		eval "`$dirc -b \"$HOME/.dircolors\"` 2>/dev/null"
		export LS_COLORS
	fi
	unset dirc

	RIPGREP_CONFIG_PATH="${HOME}/.ripgreprc"
	export RIPGREP_CONFIG_PATH
}

alias gdiff='git diff --word-diff --no-index --'

set_colors

GREP_COLOR='1;4;32'
GREP_OPTIONS="--color=auto"
export GREP_COLOR GREP_OPTIONS

EDITOR="emacs -nw"
GIT_EDITOR="emacs -nw"
VISUAL="emacs -nw"
export EDITOR GIT_EDITOR VISUAL

unset isinstalled

#EOF __TAGGED__
