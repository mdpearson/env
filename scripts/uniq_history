#!/usr/bin/env python3
#
# Copyright (c) 2009-2025 Matthew Pearson <matthewpearson@gmail.com>.
#
# These scripts are free. There is no warranty; your mileage may vary.
# Visit https://creativecommons.org/licenses/by-nc-sa/4.0/ for more details.
#
# remove duplicate entries from a history file while preserving order
#

import argparse
import os
import shutil
import sys
import tempfile

parser = argparse.ArgumentParser(description="Remove duplicate records from a history file.")
parser.add_argument("-i", "--in-place", default=False, action="store_true",
                    help="Update history file in-place")
parser.add_argument('history_file', help='The history file to deduplicate')
args = parser.parse_args()

def dedup_history_file(old_histfile, new_histfd=sys.stdout):
    with open(old_histfile, "r", encoding="utf-8") as src:
        seen_records = set()
        new_history = []

        for line in reversed(src.readlines()):
            most_recent_record = line.strip()
            if most_recent_record not in seen_records:
                seen_records.add(most_recent_record)
                new_history.append(most_recent_record)

        new_histfd.write("\n".join(reversed(new_history)))
        new_histfd.write("\n")

if __name__ == "__main__":
    if args.in_place:
        with tempfile.TemporaryFile(mode="w+", encoding="utf-8") as tmpfile:
            dedup_history_file(args.history_file, tmpfile)
            tmpfile.seek(0)
            with open(args.history_file, "w", encoding="utf-8") as dst_fd:
                shutil.copyfileobj(tmpfile, dst_fd)
    else:
        dedup_history_file(args.history_file)

#EOF __TAGGED__
